#!/bin/bash

[ -f /.installed  ] && exit 0
while [ 1 ]; do
  cd /opt
  # download EVA ICS
  if [ ${download} ]; then
      rm -f eva-dist.tgz
      rm -f yedb.tgz
      curl ${download} -o eva-dist.tgz
      if [ $? -ne 0 ]; then
          echo "Unable to connect to EVA ICS repository. Will try again in 5 seconds..."
          sleep 5
          continue
      fi
    YEDB_TB=
  else
    YEDB_TB=/opt/yedb.tgz
  fi
  find . -maxdepth 1 -type d -name "eva*" -exec rm -rf {} \;
  tar xzf eva-dist.tgz
  if [ $? -ne 0 ]; then
      echo "Unable to get EVA ICS distribution. Will try again in 5 seconds..."
      sleep 5
      continue
  fi
  result=0
  if [ $before_install ]; then
    $before_install
    result=$?
  fi
  if [ $result -ne 0 ]; then
      echo "Unable to run before install command ${before_install}. Will try again in 5 seconds..."
      sleep 5
      continue
  fi
  find . -maxdepth 1 -type d -name "eva-*" -exec mv -f {} eva \;
  # connect runtime volume if exists
  [ -d /runtime ] && ln -sf /runtime /opt/eva/runtime
  # turn on debug mode
  bash_debug_opts=
  if [ ${debug} ] || [ ${development_mode} ]; then
      [ ${development_mode} ] && devmode='\ndevelopment = yes' || devmode=
      sed -i "s/^debug =.*/debug = yes${devmode}/g" eva/etc/*.ini-dist
      bash_debug_opts=-x
  fi
  # connect ui volume if exists
  if [ -d /ui ]; then
      if [ -z "$(ls -A /ui)" ]; then
          # empty ui, putting default
          mv /opt/eva/ui/* /ui/
      fi
      rm -rf /opt/eva/ui
      ln -sf /ui /opt/eva/ui
  fi
  # connect backup volume if exists
  [ -d /backup ] && ln -sf /backup /opt/eva/backup
  # setup EVA ICS
  MQTT_OPTS=
  MQTT_A_OPTS=
  MQTT_D_OPTS=
  LINK_OPTS=
  CM_OPTS=
  DEPLOY_OPTS=
  [ "x${link}" = "x1" ] && LINK_OPTS="--link"
  [ "x${cloud_manager}" = "x1" ] && CM_OPTS="--cloud-manager"
  [ "x${deploy}" != "x" ] && DEPLOY_OPTS="--deploy"
  [ ${mqtt} ] && MQTT_OPTS="--mqtt" && MQTT_A_OPTS=--mqtt-announce && MQTT_D_OPTS=--mqtt-discovery
  if [ "${product}" ]; then
    P_OPTS=
    for p in ${product}; do
      p="$(echo $p | tr -d "\'\"")"
      P_OPTS="${P_OPTS} -p $p"
    done
  else
    P_OPTS="-p all"
  fi
  cd /opt/eva
  # link to python venv
  ln -sf /python3
  YEDB_TARBALL_PATH=$YEDB_TB VENV_CONFIG=./etc/setup/venv-system-pandas.yml \
    bash ${bash_debug_opts} ./easy-setup --skip-check --auto \
    ${AUTO_OPTS} ${MQTT_A_OPTS} ${MQTT_D_OPTS} ${MQTT_OPTS} ${mqtt} \
    ${LINK_OPTS} ${P_OPTS} ${CM_OPTS} ${DEPLOY_OPTS} ${deploy}
  result=$?
  if [ $result -eq 0 ] && [ $after_install ]; then
    $after_install
    result=$?
  fi
  if [ ${result} -eq 0 ]; then
      touch /.installed
      if [ -z "$product" ] || [ "$product" == "all" ]; then
        product="uc lm sfa"
      fi
      /opt/eva/sbin/eva-control stop
      for p in $product; do
        cp ./etc/supervisor/conf.d/eva-${p}.conf /etc/supervisor/conf.d/
        AUTO_PREFIX=1 /opt/eva/sbin/eva-registry-cli set-field \
          config/${p}/service supervisord-program eva-${p}
      done
      /opt/eva/sbin/registry-control stop
      echo YEDB_SUPERVISORD_PROGRAM=eva-registry >> /opt/eva/etc/eva_config
      rm -f /etc/supervisor/conf.d/eva-install.conf
      cp ./etc/supervisor/conf.d/eva-registry.conf /etc/supervisor/conf.d/
      cp ./etc/supervisor/conf.d/eva-onboot.conf /etc/supervisor/conf.d/
      supervisorctl update
      break
  else
      echo "FAILED. CODE: ${result}"
      exit 5
  fi
done

rm -f $0
exit 0
