#!/bin/bash

STDOUT=/dev/fd/1
STDERR=/dev/fd/2

export STDOUT STDERR

while [ 1 ]; do
  if [ -f /.installed ]; then
    break
  fi
  if [ -z "$product" ] || [ "$product" == "all" ]; then
    PRODUCTS="uc lm sfa"
  else
    PRODUCTS=$product
  fi
  export PRODUCTS
  cd /opt
  # download EVA ICS
  if [ ${download} ]; then
      rm -f eva-dist.tgz
      rm -f yedb.tgz
      curl ${download} -o eva-dist.tgz
      if [ $? -ne 0 ]; then
          echo "Unable to connect to EVA ICS repository. Will try again in 5 seconds..."
          sleep 5
          continue
      fi
    YEDB_TB=
  else
    YEDB_TB=/opt/yedb.tgz
  fi
  find . -maxdepth 1 -type d -name "eva*" -exec rm -rf {} \;
  tar xzf eva-dist.tgz
  if [ $? -ne 0 ]; then
      echo "Unable to get EVA ICS distribution. Will try again in 5 seconds..."
      sleep 5
      continue
  fi
  result=0
  if [ $before_install ]; then
    $before_install
    result=$?
  fi
  if [ $result -ne 0 ]; then
      echo "Unable to run before install command ${before_install}. Will try again in 5 seconds..."
      sleep 5
      continue
  fi
  find . -maxdepth 1 -type d -name "eva-*" -exec mv -f {} eva \;
  # connect runtime volume if exists
  [ -d /mnt/runtime ] && ln -sf /mnt/runtime /opt/eva/runtime
  [ -d /mnt/log ] && ln -sf /mnt/log /opt/eva/log
  [ -d /mnt/backup ] && ln -sf /mnt/backup /opt/eva/backup
  # connect ui and pvt volumes if exist
  if [ -d /mnt/ui ]; then
      if [ -z "$(ls -A /ui)" ]; then
          # empty ui, putting default
          mv /opt/eva/ui/* /mnt/ui/
      fi
      rm -rf /opt/eva/ui
      ln -sf /mnt/ui /opt/eva/ui
  fi
  if [ -d /mnt/pvt ]; then
      if [ -z "$(ls -A /pvt)" ]; then
          # empty pvt, putting default
          mv /opt/eva/pvt/* /mnt/pvt/
      fi
      rm -rf /opt/eva/pvt
      ln -sf /mnt/pvt /opt/eva/pvt
  fi
  # setup EVA ICS
  MQTT_OPTS=
  MQTT_A_OPTS=
  MQTT_D_OPTS=
  LINK_OPTS=
  CM_OPTS=
  DEPLOY_OPTS=
  [ "x${cloud_manager}" = "x1" ] && CM_OPTS="--cloud-manager"
  [ "x${deploy}" != "x" ] && DEPLOY_OPTS="--deploy"
  [ ${mqtt} ] && MQTT_OPTS="--mqtt" && MQTT_A_OPTS=--mqtt-announce && MQTT_D_OPTS=--mqtt-discovery
  if [ "${product}" ]; then
    P_OPTS=
    for p in ${product}; do
      p="$(echo $p | tr -d "\'\"")"
      P_OPTS="${P_OPTS} -p $p"
    done
  else
    P_OPTS="-p all"
  fi
  cd /opt/eva
  # link to python venv
  ln -sf /venv
  YEDB_TARBALL_PATH=$YEDB_TB VENV_CONFIG=./etc/setup/venv-system-pandas.yml \
    PREPARE_REGISTRY_SCRIPT=/eva-registry-setup \
    bash ${bash_debug_opts} ./easy-setup --skip-check --auto --link \
    ${MQTT_A_OPTS} ${MQTT_D_OPTS} ${MQTT_OPTS} ${mqtt} \
    ${P_OPTS} ${CM_OPTS} ${DEPLOY_OPTS} ${deploy}
  result=$?
  if [ $result -eq 0 ] && [ $after_install ]; then
    $after_install
    result=$?
  fi
  if [ ${result} -eq 0 ]; then
      touch /.installed
      break
  else
      echo "FAILED. CODE: ${result}"
      exit 5
  fi
done

/opt/eva/sbin/registry-control start
/opt/eva/sbin/eva-control start

while true; do
  sleep 1
done
exit 0
